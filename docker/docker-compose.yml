version: '3.8'

services:
  prometheus:
    build:
      context: .
      dockerfile: Dockerfiles/prometheus.Dockerfile
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped

  alertmanager:
    build:
      context: .
      dockerfile: Dockerfiles/alertmanager.Dockerfile
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ../prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ../prometheus/rules:/etc/alertmanager/rules
    env_file:
      - ../.env
    restart: unless-stopped

  grafana:
    build:
      context: .
      dockerfile: Dockerfiles/grafana.Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ../grafana/provisioning/:/etc/grafana/provisioning/
      - ../grafana/dashboards/:/var/lib/grafana/dashboards/
    restart: unless-stopped

  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfiles/elasticsearch.Dockerfile
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped

  kibana:
    build:
      context: .
      dockerfile: Dockerfiles/kibana.Dockerfile
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    restart: unless-stopped

  logstash:
    build:
      context: .
      dockerfile: Dockerfiles/logstash.Dockerfile
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ../elk/logstash/pipelines.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    restart: unless-stopped

zabbix-db:
    image: postgres:14-alpine
    container_name: zabbix-db
    environment:
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
    volumes:
      - zabbix-db-data:/var/lib/postgresql/data
    restart: unless-stopped

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:6.4-alpine
    container_name: zabbix-server
    depends_on:
      - zabbix-db
    ports:
      - "10051:10051"
    volumes:
      - ../zabbix/server_conf/zabbix_server.conf:/etc/zabbix/zabbix_server.conf
    environment:
      - DB_SERVER_HOST=zabbix-db
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
    restart: unless-stopped

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:6.4-alpine
    container_name: zabbix-web
    depends_on:
      - zabbix-server
    ports:
      - "8080:8080"
    environment:
      - DB_SERVER_HOST=zabbix-db
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
      - ZBX_SERVER_HOST=zabbix-server
    restart: unless-stopped

  zabbix-agent:
    image: zabbix/zabbix-agent2:6.4-alpine
    container_name: zabbix-agent
    depends_on:
      - zabbix-server
    volumes:
      - ../zabbix/agent_conf/zabbix_agent2.conf:/etc/zabbix/zabbix_agent2.conf
    environment:
      - ZBX_SERVER_HOST=zabbix-server
    restart: unless-stopped

volumes:
  esdata:
    driver: local
  zabbix-db-data:
    driver: local
